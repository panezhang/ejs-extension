/**
 * @author zhangpeng
 * @date 15/10/3-上午3:05
 * @file 工具类, 提供资源ID和路径查询等功能
 */

//
var _ = require('underscore');

// system modules
var path = require('path');

module.exports = function (opts, FileLoader, TemplateHelper) {
    var logger = opts.LoggerCreate(__filename);

    return {
        /**
         * template绝对路径计算方式:
         * = webRootPath + templateFolder + resourceID
         * = templatePath + resourceID
         *
         * 静态资源绝对路径计算方式:
         * = webRootPath + staticFolder + templateFolder + resourceID
         * = staticPath + resourceID
         */
        webRootPath: opts.webRoot,
        templateFolder: opts.tplDir,
        staticFolder: opts.staticDir || opts.tplDir,
        templatePath: path.join(opts.webRoot, opts.tplDir),  // 模板文件路径
        staticPath: opts.staticDir ? path.join(opts.webRoot, opts.staticDir, opts.tplDir): path.join(opts.webRoot, opts.tplDir),  // 静态资源路径

        map: opts.map,  // resource_map generated by fis3

        mergeJs: opts.conf.mergeJs,
        mergeCss: opts.conf.mergeCss,

        /**
         * 返回绝对路径, 供ejs渲染使用
         * @param resourceID 可以是PageID | WidgetID | LayoutID
         * @returns {string} resource所在的绝对路径
         */
        findTemplate: function (resourceID) {
            return FileLoader.matchFile(path.join(this.templatePath, resourceID) + TemplateHelper.settings.tplExt);
        },

        /**
         * 需要mergeJs时返回绝对路径, 否则返回相对路径, 供<script>标签使用
         * @param resourceID 可以是PageID | WidgetID | LayoutID
         * @returns {string} resource所在的相对路径，可以通过该路径http请求该资源
         */
        findScript: function (resourceID) {
            var self = this;
            var scriptPath = self.findStatic(resourceID, TemplateHelper.settings.scriptExt, self.mergeJs);
            logger.trace('resourceID: %s,\nfindScript: %s', resourceID, scriptPath);
            return scriptPath;
        },

        /**
         * 需要mergeCss时返回绝对路径, 否则返回相对路径, 供<link>标签使用
         * @param resourceID 可以是PageID | WidgetID | LayoutID
         * @returns {string} resource所在的相对路径，可以通过该路径http请求该资源
         */
        findStyle: function (resourceID) {
            var self = this;
            var stylePath = self.findStatic(resourceID, TemplateHelper.settings.styleExt, self.mergeCss);
            logger.trace('resourceID: %s,\nfindStyle: %s', resourceID, stylePath);
            return stylePath;
        },

        findStatic: function (resourceID, ext, merge) {
            var self = this;
            var staticPath;
            if (_.isEmpty(self.map)) {
                // map 为空时, 直接拼接路径, 并确保文件存在
                staticPath = FileLoader.matchFile(path.join(self.staticPath, resourceID) + ext);
                if (!merge && staticPath) {
                    staticPath = staticPath.substr(staticPath.indexOf(self.staticFolder));
                }
            } else {
                var resourceKey = path.join(self.templateFolder, resourceID) + ext;
                var result = self.map['res'] && self.map['res'][resourceKey];
                staticPath = result && result.uri;
                if (merge && staticPath) {
                    staticPath = self.webRootPath + staticPath;
                }
            }
            return staticPath;
        },

        genPageID: function (module, pageName) {
            return path.join(module, 'page', pageName, pageName);
        },

        genWidgetID: function (module, widgetName) {
            return path.join(module, 'widget', widgetName, widgetName);
        },

        genLayoutID: function (module, layoutName) {
            return path.join(module, 'layout', layoutName, layoutName);
        }
    }
};
