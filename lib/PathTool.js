/**
 * @author zhangpeng
 * @date 15/10/3-上午3:05
 * @file 工具类, 提供资源ID和路径查询等功能
 */

// system modules
var path = require('path');

// our modules
var TemplateHelper = require(path.join(__dirname, 'TemplateHelper'));

module.exports = function (webRootPath, templateFolder, staticFolder, FileLoader, map, LoggerCreate) {
    var logger = LoggerCreate(__filename);
    
    return {
        webRootPath: webRootPath,
        templateFolder: templateFolder,
        staticFolder: staticFolder,

        templatePath: path.join(webRootPath, templateFolder),  // 模板文件路径
        staticPath: path.join(webRootPath, staticFolder),  // 静态资源路径

        map: map,  // resource_map generated by fis3

        /**
         * 返回绝对路径，供ejs渲染使用
         * @param resourceID 可以是PageID | WidgetID | LayoutID
         * @returns {string} resource所在的绝对路径
         */
        findTemplate: function (resourceID) {
            return FileLoader.matchFile(path.join(this.templatePath, resourceID) + TemplateHelper.settings.tplExt);
        },

        /**
         * 返回相对路径，供<script>标签使用
         * @param resourceID 可以是PageID | WidgetID | LayoutID
         * @returns {string} resource所在的相对路径，可以通过该路径http请求该资源
         */
        findScript: function (resourceID) {
            var resourceKey = path.join(this.templateFolder, resourceID) + TemplateHelper.settings.scriptExt;
            var result = this.map['res'][resourceKey];
            logger.trace('resourceID: %s,\nfindScript: %s', resourceKey, result);
            return result && result.uri;
        },

        /**
         * 返回相对路径，供<link>标签使用
         * @param resourceID 可以是PageID | WidgetID | LayoutID
         * @returns {string} resource所在的相对路径，可以通过该路径http请求该资源
         */
        findStyle: function (resourceID) {
            var resourceKey = path.join(this.templateFolder, resourceID) + TemplateHelper.settings.styleExt;
            var result = this.map['res'][resourceKey];
            logger.trace('resourceID: %s,\nfindStyle: %s', resourceKey, result);
            return result && result.uri;
        },

        genPageID: function (module, pageName) {
            return path.join(module, 'page', pageName, pageName);
        },

        genWidgetID: function (module, widgetName) {
            return path.join(module, 'widget', widgetName, widgetName);
        },

        genLayoutID: function (module, layoutName) {
            return path.join(module, 'layout', layoutName, layoutName);
        }
    }
};
